!function(window){window.Fr=window.Fr||{},Fr.voice={mp3WorkerPath:"src/mp3Worker.js",stream:!1,input:!1,init_called:!1,init:function(){try{window.AudioContext=window.AudioContext||window.webkitAudioContext,navigator.getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia,window.URL=window.URL||window.webkitURL,navigator.getUserMedia===!1&&alert("getUserMedia() is not supported in your browser"),this.context=new AudioContext}catch(e){alert("Web Audio API is not supported in this browser")}},record:function(output,finishCallback,recordingCallback){var finishCallback=finishCallback||function(){},recordingCallback=recordingCallback||function(){};this.init_called===!1&&(this.init(),this.init_called=!0);var $that=this;navigator.getUserMedia({audio:!0},function(stream){$that.input=$that.context.createMediaStreamSource(stream),output===!0&&$that.input.connect($that.context.destination),$that.recorder=new Recorder($that.input,{mp3WorkerPath:$that.mp3WorkerPath,recordingCallback:recordingCallback}),$that.stream=stream,$that.recorder.record(),finishCallback(stream)},function(){alert("No live audio input")})},pause:function(){this.recorder.stop()},resume:function(){this.recorder.record()},stop:function(){return this.recorder.stop(),this.recorder.clear(),this.stream.getTracks().forEach(function(track){track.stop()}),this},"export":function(callback,type){"mp3"==type?this.recorder.exportMP3(callback):this.recorder.exportWAV(function(blob){if(""==type||"blob"==type)callback(blob);else if("base64"==type){var reader=new window.FileReader;reader.readAsDataURL(blob),reader.onloadend=function(){base64data=reader.result,callback(base64data)}}else if("URL"==type){var url=URL.createObjectURL(blob);callback(url)}})}}}(window);